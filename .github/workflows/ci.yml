name: Continuous Integration
on: 
  push:
    branches:    
  #  - main
    - 'Mod**'
    paths-ignore:
    - '**/README.md'

env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: docker.io
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}

jobs:
  terraform:
          runs-on: ubuntu-latest

          steps:
            - run: az account set  --subscription  ${{ secrets.ARM_SUBSCRIPTION_ID }}
            - uses: actions/checkout@v3
            -  uses: hashicorp/setup-terraform@v1
            - run: terraform --version
            - run: terraform init
            - run: terraform validate
              continue-on-error: false
            - run: terraform plan  -out "planfile"
            - run: terraform apply  -auto-approve -input=false "planfile"
            - env:
                GHWEBHOOK: "${{ secrets.GHWEBHOOK }}"
              run: curl -dH -X POST $GHWEBHOOK

  test:
          name: test
          runs-on: ubuntu-latest
          needs:
            - terraform
          steps:
              - uses: actions/checkout@v3
              - uses: snyk/actions/python@master
#              - name: Run Snyk to check for vulnerabilities
                continue-on-error: true
                env:
                  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  
              - run: docker build --target test --tag todo-app:test .
              - run: docker run  --env-file .env.test -p 5000:5000 --entrypoint poetry todo-app:test run safety check
              - run: docker run --env-file .env.test -p 5000:5000 todo-app:test
                continue-on-error: true
  deploy:
          name: deploy
          needs: test
          runs-on: ubuntu-latest
          steps:
              - uses: actions/checkout@v3
              - uses: docker/setup-buildx-action@v2
#              - name: login to docker
              - uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
                with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
              
              - name: Build and push Docker image
                uses: docker/build-push-action@v2
                with:
                  #  context: "{{defaultContext}}"
                    push: true
                    tags: lvarnham/smellybeagle:latest
                    labels: production

              - run: docker build --target production --tag lvarnham/smellybeagle:latest .
              - run: docker push lvarnham/smellybeagle:latest
              - env:
                  WEBHOOK: "${{ secrets.WEBHOOK_SECRET }}"
                run: curl -dH -X POST $WEBHOOK

